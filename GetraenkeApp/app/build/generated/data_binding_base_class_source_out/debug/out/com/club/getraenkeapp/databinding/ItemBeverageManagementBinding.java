// Generated by view binder compiler. Do not edit!
package com.club.getraenkeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.club.getraenkeapp.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemBeverageManagementBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton buttonDelete;

  @NonNull
  public final MaterialButton buttonEdit;

  @NonNull
  public final MaterialButton buttonToggleActive;

  @NonNull
  public final MaterialCardView cardView;

  @NonNull
  public final TextView textViewActiveStatus;

  @NonNull
  public final TextView textViewBeverageCategory;

  @NonNull
  public final TextView textViewBeverageId;

  @NonNull
  public final TextView textViewBeverageName;

  @NonNull
  public final TextView textViewBeveragePrice;

  @NonNull
  public final TextView textViewCreatedAt;

  private ItemBeverageManagementBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialButton buttonDelete, @NonNull MaterialButton buttonEdit,
      @NonNull MaterialButton buttonToggleActive, @NonNull MaterialCardView cardView,
      @NonNull TextView textViewActiveStatus, @NonNull TextView textViewBeverageCategory,
      @NonNull TextView textViewBeverageId, @NonNull TextView textViewBeverageName,
      @NonNull TextView textViewBeveragePrice, @NonNull TextView textViewCreatedAt) {
    this.rootView = rootView;
    this.buttonDelete = buttonDelete;
    this.buttonEdit = buttonEdit;
    this.buttonToggleActive = buttonToggleActive;
    this.cardView = cardView;
    this.textViewActiveStatus = textViewActiveStatus;
    this.textViewBeverageCategory = textViewBeverageCategory;
    this.textViewBeverageId = textViewBeverageId;
    this.textViewBeverageName = textViewBeverageName;
    this.textViewBeveragePrice = textViewBeveragePrice;
    this.textViewCreatedAt = textViewCreatedAt;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemBeverageManagementBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemBeverageManagementBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_beverage_management, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemBeverageManagementBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonDelete;
      MaterialButton buttonDelete = ViewBindings.findChildViewById(rootView, id);
      if (buttonDelete == null) {
        break missingId;
      }

      id = R.id.buttonEdit;
      MaterialButton buttonEdit = ViewBindings.findChildViewById(rootView, id);
      if (buttonEdit == null) {
        break missingId;
      }

      id = R.id.buttonToggleActive;
      MaterialButton buttonToggleActive = ViewBindings.findChildViewById(rootView, id);
      if (buttonToggleActive == null) {
        break missingId;
      }

      MaterialCardView cardView = (MaterialCardView) rootView;

      id = R.id.textViewActiveStatus;
      TextView textViewActiveStatus = ViewBindings.findChildViewById(rootView, id);
      if (textViewActiveStatus == null) {
        break missingId;
      }

      id = R.id.textViewBeverageCategory;
      TextView textViewBeverageCategory = ViewBindings.findChildViewById(rootView, id);
      if (textViewBeverageCategory == null) {
        break missingId;
      }

      id = R.id.textViewBeverageId;
      TextView textViewBeverageId = ViewBindings.findChildViewById(rootView, id);
      if (textViewBeverageId == null) {
        break missingId;
      }

      id = R.id.textViewBeverageName;
      TextView textViewBeverageName = ViewBindings.findChildViewById(rootView, id);
      if (textViewBeverageName == null) {
        break missingId;
      }

      id = R.id.textViewBeveragePrice;
      TextView textViewBeveragePrice = ViewBindings.findChildViewById(rootView, id);
      if (textViewBeveragePrice == null) {
        break missingId;
      }

      id = R.id.textViewCreatedAt;
      TextView textViewCreatedAt = ViewBindings.findChildViewById(rootView, id);
      if (textViewCreatedAt == null) {
        break missingId;
      }

      return new ItemBeverageManagementBinding((MaterialCardView) rootView, buttonDelete,
          buttonEdit, buttonToggleActive, cardView, textViewActiveStatus, textViewBeverageCategory,
          textViewBeverageId, textViewBeverageName, textViewBeveragePrice, textViewCreatedAt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
